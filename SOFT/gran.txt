; generated by ARM C/C++ Compiler with , RVCT4.0 [Build 524] for uVision
; commandline ArmCC [--debug -c --asm --interleave -ogran.o --depend=gran.d --feedback=UKU206.fed --device=DARMP --apcs=interwork -O3 -IC:\Keil\ARM\INC\Philips -D__MICROLIB --omf_browse=gran.crf gran.c]
                          ARM

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  gran_ring_char PROC
;;;4      //-----------------------------------------------
;;;5      void gran_ring_char(signed char *adr, signed char min, signed char max)
000000  e1d030d0          LDRSB    r3,[r0,#0]
;;;6      {
;;;7      if (*adr<min) *adr=max;
000004  e1530001          CMP      r3,r1
000008  b5c02000          STRBLT   r2,[r0,#0]
;;;8      if (*adr>max) *adr=min; 
00000c  e1d030d0          LDRSB    r3,[r0,#0]
000010  e1530002          CMP      r3,r2
000014  c5c01000          STRBGT   r1,[r0,#0]
;;;9      } 
000018  e12fff1e          BX       lr
;;;10      
                          ENDP

                  gran_char PROC
;;;11     //-----------------------------------------------
;;;12     void gran_char(signed char *adr, signed char min, signed char max)
00001c  e1d030d0          LDRSB    r3,[r0,#0]
;;;13     {
;;;14     if (*adr<min) *adr=min;
000020  e1530001          CMP      r3,r1
000024  b5c01000          STRBLT   r1,[r0,#0]
;;;15     if (*adr>max) *adr=max; 
000028  e1d010d0          LDRSB    r1,[r0,#0]
00002c  e1510002          CMP      r1,r2
000030  c5c02000          STRBGT   r2,[r0,#0]
;;;16     } 
000034  e12fff1e          BX       lr
;;;17     
                          ENDP

                  gran PROC
;;;18     //-----------------------------------------------
;;;19     void gran(signed short *adr, signed short min, signed short max)
000038  e1d030f0          LDRSH    r3,[r0,#0]
;;;20     {
;;;21     if (*adr<min) *adr=min;
00003c  e1530001          CMP      r3,r1
000040  b1c010b0          STRHLT   r1,[r0,#0]
;;;22     if (*adr>max) *adr=max; 
000044  e1d010f0          LDRSH    r1,[r0,#0]
000048  e1510002          CMP      r1,r2
00004c  c1c020b0          STRHGT   r2,[r0,#0]
;;;23     } 
000050  e12fff1e          BX       lr
;;;24     
                          ENDP

                  gran_ring PROC
;;;25     //-----------------------------------------------
;;;26     void gran_ring(signed short *adr, signed short min, signed short max)
000054  e1d030f0          LDRSH    r3,[r0,#0]
;;;27     {
;;;28     if (*adr<min) *adr=max;
000058  e1530001          CMP      r3,r1
00005c  b1c020b0          STRHLT   r2,[r0,#0]
;;;29     if (*adr>max) *adr=min; 
000060  e1d030f0          LDRSH    r3,[r0,#0]
000064  e1530002          CMP      r3,r2
000068  c1c010b0          STRHGT   r1,[r0,#0]
;;;30     } 
00006c  e12fff1e          BX       lr
;;;31     
                          ENDP


                          AREA ||area_number.2||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.2||, ||.text||
                  gran_long PROC
;;;32     //-----------------------------------------------
;;;33     void gran_long(signed long *adr, signed long min, signed long max)
000000  e5903000          LDR      r3,[r0,#0]
;;;34     {
;;;35     if (*adr<min) *adr=max;
000004  e1530001          CMP      r3,r1
000008  b5802000          STRLT    r2,[r0,#0]
;;;36     if (*adr>max) *adr=min; 
00000c  e5903000          LDR      r3,[r0,#0]
000010  e1530002          CMP      r3,r2
000014  c5801000          STRGT    r1,[r0,#0]
;;;37     } 
000018  e12fff1e          BX       lr
                          ENDP

