; generated by ARM C/C++ Compiler with , RVCT4.0 [Build 524] for uVision
; commandline ArmCC [--debug -c --asm --interleave -o25lc640.o --depend=25lc640.d --feedback=UKU206.fed --device=DARMP --apcs=interwork -O3 -IC:\Keil\ARM\INC\Philips -D__MICROLIB --omf_browse=25lc640.crf 25lc640.c]
                          ARM

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  spi1 PROC
;;;9      
;;;10     char spi1(char in)
000000  e59f15f4          LDR      r1,|L1.1532|
;;;11     {
;;;12     S1SPDR=in;
000004  e1c100b8          STRH     r0,[r1,#8]
                  |L1.8|
;;;13     while(!(S1SPSR&(1<<7)));
000008  e5d10004          LDRB     r0,[r1,#4]
00000c  e3100080          TST      r0,#0x80
000010  0afffffc          BEQ      |L1.8|
;;;14     return S1SPDR;
000014  e1d100b8          LDRH     r0,[r1,#8]
000018  e20000ff          AND      r0,r0,#0xff
;;;15     }
00001c  e12fff1e          BX       lr
;;;16     
                          ENDP

                  spi1_config PROC
;;;20     //настройка SPI1
;;;21     void spi1_config(void)
000020  e59f05d8          LDR      r0,|L1.1536|
;;;22     { 
;;;23     
;;;24     SET_REG( PINSEL1, 2, 1*2, 2);
000024  e5901004          LDR      r1,[r0,#4]
000028  e3c1100c          BIC      r1,r1,#0xc
00002c  e3811008          ORR      r1,r1,#8
000030  e5801004          STR      r1,[r0,#4]
;;;25     SET_REG( PINSEL1, 2, 2*2, 2);
000034  e5901004          LDR      r1,[r0,#4]
000038  e3c11030          BIC      r1,r1,#0x30
00003c  e3811020          ORR      r1,r1,#0x20
000040  e5801004          STR      r1,[r0,#4]
;;;26     SET_REG( PINSEL1, 2, 3*2, 2);
000044  e5901004          LDR      r1,[r0,#4]
000048  e3c110c0          BIC      r1,r1,#0xc0
00004c  e3811080          ORR      r1,r1,#0x80
000050  e5801004          STR      r1,[r0,#4]
;;;27     SET_REG( PINSEL1, 2, 4*2, 2);
000054  e5901004          LDR      r1,[r0,#4]
000058  e3c11c03          BIC      r1,r1,#0x300
00005c  e3811c02          ORR      r1,r1,#0x200
000060  e5801004          STR      r1,[r0,#4]
;;;28     
;;;29     S1SPCCR=12;
000064  e3a0100c          MOV      r1,#0xc
000068  e2800901          ADD      r0,r0,#0x4000
00006c  e5c0100c          STRB     r1,[r0,#0xc]
;;;30     S1SPCR=0x20;
000070  e3a01020          MOV      r1,#0x20
000074  e1c010b0          STRH     r1,[r0,#0]
;;;31     }
000078  e12fff1e          BX       lr
;;;32     
                          ENDP

                  spi1_unconfig PROC
;;;34     //выключение SPI1
;;;35     void spi1_unconfig(void)
00007c  e59f057c          LDR      r0,|L1.1536|
;;;36     { 
;;;37     
;;;38     PINSEL1=(PINSEL1&0xfffffc03)|0x00000000;
000080  e5902004          LDR      r2,[r0,#4]
;;;39     
;;;40     S1SPCR=0x00;
000084  e3a01000          MOV      r1,#0
000088  e3c22fff          BIC      r2,r2,#0x3fc          ;38
00008c  e5802004          STR      r2,[r0,#4]            ;38
000090  e2800901          ADD      r0,r0,#0x4000
000094  e1c010b0          STRH     r1,[r0,#0]
;;;41     }
000098  e12fff1e          BX       lr
;;;42     
                          ENDP

                  lc640_wren PROC
;;;44     //Разрешение записи
;;;45     void lc640_wren(void)
00009c  e52de004          PUSH     {lr}
;;;46     {
;;;47     
;;;48     spi1_config();
0000a0  ebfffffe          BL       spi1_config
;;;49     
;;;50     CS_ON
0000a4  e59f2558          LDR      r2,|L1.1540|
0000a8  e5920008          LDR      r0,[r2,#8]
0000ac  e3800602          ORR      r0,r0,#0x200000
0000b0  e5820008          STR      r0,[r2,#8]
0000b4  e592000c          LDR      r0,[r2,#0xc]
0000b8  e3800602          ORR      r0,r0,#0x200000
0000bc  e582000c          STR      r0,[r2,#0xc]
;;;51     
;;;52     spi1(0x06); 
0000c0  e3a00006          MOV      r0,#6
0000c4  ebfffffe          BL       spi1
;;;53     
;;;54     CS_OFF
0000c8  e5920008          LDR      r0,[r2,#8]
0000cc  e3800602          ORR      r0,r0,#0x200000
0000d0  e5820008          STR      r0,[r2,#8]
0000d4  e5920004          LDR      r0,[r2,#4]
0000d8  e3800602          ORR      r0,r0,#0x200000
0000dc  e5820004          STR      r0,[r2,#4]
;;;55     
;;;56     spi1_unconfig();
0000e0  e49de004          POP      {lr}
0000e4  eafffffe          B        spi1_unconfig
;;;57     }
;;;58     
                          ENDP

                  lc640_rdsr PROC
;;;60     //Чтение из м-мы регистра состояния
;;;61     char lc640_rdsr(void)
0000e8  e52de004          PUSH     {lr}
;;;62     {
;;;63     char temp;
;;;64     
;;;65     spi1_config();
0000ec  ebfffffe          BL       spi1_config
;;;66     CS_ON
0000f0  e59f250c          LDR      r2,|L1.1540|
0000f4  e5920008          LDR      r0,[r2,#8]
0000f8  e3800602          ORR      r0,r0,#0x200000
0000fc  e5820008          STR      r0,[r2,#8]
000100  e592000c          LDR      r0,[r2,#0xc]
000104  e3800602          ORR      r0,r0,#0x200000
000108  e582000c          STR      r0,[r2,#0xc]
;;;67     spi1(0x05);
00010c  e3a00005          MOV      r0,#5
000110  ebfffffe          BL       spi1
;;;68     temp=spi1(0xff);
000114  e3a000ff          MOV      r0,#0xff
000118  ebfffffe          BL       spi1
00011c  e1a03000          MOV      r3,r0
;;;69     CS_OFF
000120  e5920008          LDR      r0,[r2,#8]
000124  e3800602          ORR      r0,r0,#0x200000
000128  e5820008          STR      r0,[r2,#8]
00012c  e5920004          LDR      r0,[r2,#4]
000130  e3800602          ORR      r0,r0,#0x200000
000134  e5820004          STR      r0,[r2,#4]
;;;70     spi1_unconfig();
000138  ebfffffe          BL       spi1_unconfig
;;;71     return temp;
00013c  e49de004          POP      {lr}
000140  e1a00003          MOV      r0,r3
;;;72     }
000144  e12fff1e          BX       lr
;;;73     
                          ENDP

                  lc640_read_int PROC
;;;106    //Чтение из м-мы слова по адр. ADR
;;;107    int lc640_read_int(int ADR)
000148  e92d4001          PUSH     {r0,lr}
                  |L1.332|
;;;108    {
;;;109    char temp;
;;;110    int temp_i;
;;;111    
;;;112    
;;;113    while(lc640_rdsr()&0x01)
00014c  ebfffffe          BL       lc640_rdsr
000150  e3100001          TST      r0,#1
000154  1afffffc          BNE      |L1.332|
;;;114    	{
;;;115    	}
;;;116    
;;;117    //lc640_rdsr();
;;;118    //IO0DIR_bit.P0_11=1;
;;;119    //IO0SET_bit.P0_11=1;
;;;120    spi1_config();
000158  ebfffffe          BL       spi1_config
;;;121    CS_ON
00015c  e59f24a0          LDR      r2,|L1.1540|
000160  e5920008          LDR      r0,[r2,#8]
000164  e3800602          ORR      r0,r0,#0x200000
000168  e5820008          STR      r0,[r2,#8]
00016c  e592000c          LDR      r0,[r2,#0xc]
000170  e3800602          ORR      r0,r0,#0x200000
000174  e582000c          STR      r0,[r2,#0xc]
;;;122    spi1(0x03);
000178  e3a00003          MOV      r0,#3
00017c  ebfffffe          BL       spi1
;;;123    temp=*(((char*)&ADR)+1);
000180  e5dd0001          LDRB     r0,[sp,#1]
;;;124    spi1(temp);
000184  ebfffffe          BL       spi1
;;;125    temp=*((char*)&ADR);
000188  e5dd0000          LDRB     r0,[sp,#0]
;;;126    spi1(temp);
00018c  ebfffffe          BL       spi1
;;;127    temp=spi1(0xff);
000190  e3a000ff          MOV      r0,#0xff
000194  ebfffffe          BL       spi1
000198  e1a03000          MOV      r3,r0
;;;128    temp_i=spi1(0xff);
00019c  e3a000ff          MOV      r0,#0xff
0001a0  ebfffffe          BL       spi1
;;;129    temp_i<<=8;
;;;130    temp_i+=temp;
0001a4  e0833400          ADD      r3,r3,r0,LSL #8
;;;131    CS_OFF
0001a8  e5920008          LDR      r0,[r2,#8]
0001ac  e3800602          ORR      r0,r0,#0x200000
0001b0  e5820008          STR      r0,[r2,#8]
0001b4  e5920004          LDR      r0,[r2,#4]
0001b8  e3800602          ORR      r0,r0,#0x200000
0001bc  e5820004          STR      r0,[r2,#4]
;;;132    CS_OFF
0001c0  e5920008          LDR      r0,[r2,#8]
0001c4  e3800602          ORR      r0,r0,#0x200000
0001c8  e5820008          STR      r0,[r2,#8]
0001cc  e5920004          LDR      r0,[r2,#4]
0001d0  e3800602          ORR      r0,r0,#0x200000
0001d4  e5820004          STR      r0,[r2,#4]
;;;133    spi1_unconfig();
0001d8  ebfffffe          BL       spi1_unconfig
;;;134    return temp_i;
0001dc  e1a00003          MOV      r0,r3
0001e0  e8bd4008          POP      {r3,lr}
;;;135    }
0001e4  e12fff1e          BX       lr
;;;136    
                          ENDP

                  lc640_read_long PROC
;;;138    //Чтение из м-мы 4 байт по адр. ADR
;;;139    long lc640_read_long(int ADR)
0001e8  e92d4011          PUSH     {r0,r4,lr}
                  |L1.492|
;;;140    {
;;;141    char temp0,temp1,temp2;
;;;142    long temp_i;
;;;143    while(lc640_rdsr()&0x01)
0001ec  ebfffffe          BL       lc640_rdsr
0001f0  e3100001          TST      r0,#1
0001f4  1afffffc          BNE      |L1.492|
;;;144    	{
;;;145    	}
;;;146    spi1_config();
0001f8  ebfffffe          BL       spi1_config
;;;147    CS_ON
0001fc  e59f2400          LDR      r2,|L1.1540|
000200  e5920008          LDR      r0,[r2,#8]
000204  e3800602          ORR      r0,r0,#0x200000
000208  e5820008          STR      r0,[r2,#8]
00020c  e592000c          LDR      r0,[r2,#0xc]
000210  e3800602          ORR      r0,r0,#0x200000
000214  e582000c          STR      r0,[r2,#0xc]
;;;148    spi1(0x03);
000218  e3a00003          MOV      r0,#3
00021c  ebfffffe          BL       spi1
;;;149    temp0=*(((char*)&ADR)+1);
000220  e5dd0001          LDRB     r0,[sp,#1]
;;;150    spi1(temp0);
000224  ebfffffe          BL       spi1
;;;151    temp0=*((char*)&ADR);
000228  e5dd0000          LDRB     r0,[sp,#0]
;;;152    spi1(temp0);
00022c  ebfffffe          BL       spi1
;;;153    temp0=spi1(0xff);
000230  e3a000ff          MOV      r0,#0xff
000234  ebfffffe          BL       spi1
000238  e1a03000          MOV      r3,r0
;;;154    temp1=spi1(0xff);
00023c  e3a000ff          MOV      r0,#0xff
000240  ebfffffe          BL       spi1
000244  e1a0c000          MOV      r12,r0
;;;155    temp2=spi1(0xff);
000248  e3a000ff          MOV      r0,#0xff
00024c  ebfffffe          BL       spi1
000250  e1a04000          MOV      r4,r0
;;;156    temp_i=spi1(0xff);
000254  e3a000ff          MOV      r0,#0xff
000258  ebfffffe          BL       spi1
;;;157    temp_i<<=8;
;;;158    temp_i+=temp2;
00025c  e0840400          ADD      r0,r4,r0,LSL #8
;;;159    temp_i<<=8;
;;;160    temp_i+=temp1;
000260  e08c0400          ADD      r0,r12,r0,LSL #8
;;;161    temp_i<<=8;
;;;162    temp_i+=temp0;
000264  e0833400          ADD      r3,r3,r0,LSL #8
;;;163    CS_OFF
000268  e5920008          LDR      r0,[r2,#8]
00026c  e3800602          ORR      r0,r0,#0x200000
000270  e5820008          STR      r0,[r2,#8]
000274  e5920004          LDR      r0,[r2,#4]
000278  e3800602          ORR      r0,r0,#0x200000
00027c  e5820004          STR      r0,[r2,#4]
;;;164    CS_OFF
000280  e5920008          LDR      r0,[r2,#8]
000284  e3800602          ORR      r0,r0,#0x200000
000288  e5820008          STR      r0,[r2,#8]
00028c  e5920004          LDR      r0,[r2,#4]
000290  e3800602          ORR      r0,r0,#0x200000
000294  e5820004          STR      r0,[r2,#4]
;;;165    spi1_unconfig();
000298  ebfffffe          BL       spi1_unconfig
;;;166    return temp_i;
00029c  e1a00003          MOV      r0,r3
0002a0  e8bd4018          POP      {r3,r4,lr}
;;;167    }
0002a4  e12fff1e          BX       lr
;;;168    
                          ENDP

                  lc640_read_long_ptr PROC
;;;170    //Чтение из м-мы 4 байт по адр. ADR
;;;171    void lc640_read_long_ptr(int ADR,char* out_ptr)
0002a8  e92d4003          PUSH     {r0,r1,lr}
;;;172    {
0002ac  e1a0c001          MOV      r12,r1
                  |L1.688|
;;;173    char temp0/*,temp1,temp2*/;
;;;174    //long temp_i;
;;;175    while(lc640_rdsr()&0x01)
0002b0  ebfffffe          BL       lc640_rdsr
0002b4  e3100001          TST      r0,#1
0002b8  1afffffc          BNE      |L1.688|
;;;176    	{
;;;177    	}
;;;178    spi1_config();
0002bc  ebfffffe          BL       spi1_config
;;;179    CS_ON
0002c0  e59f233c          LDR      r2,|L1.1540|
0002c4  e5920008          LDR      r0,[r2,#8]
0002c8  e3800602          ORR      r0,r0,#0x200000
0002cc  e5820008          STR      r0,[r2,#8]
0002d0  e592000c          LDR      r0,[r2,#0xc]
0002d4  e3800602          ORR      r0,r0,#0x200000
0002d8  e582000c          STR      r0,[r2,#0xc]
;;;180    spi1(0x03);
0002dc  e3a00003          MOV      r0,#3
0002e0  ebfffffe          BL       spi1
;;;181    temp0=*(((char*)&ADR)+1);
0002e4  e5dd0001          LDRB     r0,[sp,#1]
;;;182    spi1(temp0);
0002e8  ebfffffe          BL       spi1
;;;183    temp0=*((char*)&ADR);
0002ec  e5dd0000          LDRB     r0,[sp,#0]
;;;184    spi1(temp0);
0002f0  ebfffffe          BL       spi1
;;;185    out_ptr[0]=spi1(0xff);
0002f4  e3a000ff          MOV      r0,#0xff
0002f8  ebfffffe          BL       spi1
0002fc  e5cc0000          STRB     r0,[r12,#0]
;;;186    out_ptr[1]=spi1(0xff);
000300  e3a000ff          MOV      r0,#0xff
000304  ebfffffe          BL       spi1
000308  e5cc0001          STRB     r0,[r12,#1]
;;;187    out_ptr[2]=spi1(0xff);
00030c  e3a000ff          MOV      r0,#0xff
000310  ebfffffe          BL       spi1
000314  e5cc0002          STRB     r0,[r12,#2]
;;;188    out_ptr[3]=spi1(0xff);
000318  e3a000ff          MOV      r0,#0xff
00031c  ebfffffe          BL       spi1
000320  e5cc0003          STRB     r0,[r12,#3]
;;;189    CS_OFF
000324  e5920008          LDR      r0,[r2,#8]
000328  e3800602          ORR      r0,r0,#0x200000
00032c  e5820008          STR      r0,[r2,#8]
000330  e5920004          LDR      r0,[r2,#4]
000334  e3800602          ORR      r0,r0,#0x200000
000338  e5820004          STR      r0,[r2,#4]
;;;190    CS_OFF
00033c  e5920008          LDR      r0,[r2,#8]
000340  e3800602          ORR      r0,r0,#0x200000
000344  e5820008          STR      r0,[r2,#8]
000348  e5920004          LDR      r0,[r2,#4]
00034c  e3800602          ORR      r0,r0,#0x200000
000350  e5820004          STR      r0,[r2,#4]
;;;191    spi1_unconfig();
000354  e8bd400c          POP      {r2,r3,lr}
000358  eafffffe          B        spi1_unconfig
;;;192    }
;;;193    
                          ENDP

                  lc640_write PROC
;;;220    //Запись байта in по адресу ADR
;;;221    char lc640_write(int ADR,char in)
00035c  e92d4003          PUSH     {r0,r1,lr}
;;;222    {
000360  e1a0c001          MOV      r12,r1
                  |L1.868|
;;;223    char temp; 
;;;224    
;;;225    while(lc640_rdsr()&0x01)
000364  ebfffffe          BL       lc640_rdsr
000368  e3100001          TST      r0,#1
00036c  1afffffc          BNE      |L1.868|
;;;226    	{
;;;227    	}
;;;228    lc640_wren();
000370  ebfffffe          BL       lc640_wren
;;;229    spi1_config();	
000374  ebfffffe          BL       spi1_config
;;;230    CS_ON
000378  e59f2284          LDR      r2,|L1.1540|
00037c  e5920008          LDR      r0,[r2,#8]
000380  e3800602          ORR      r0,r0,#0x200000
000384  e5820008          STR      r0,[r2,#8]
000388  e592000c          LDR      r0,[r2,#0xc]
00038c  e3800602          ORR      r0,r0,#0x200000
000390  e582000c          STR      r0,[r2,#0xc]
;;;231    spi1(0x02);
000394  e3a00002          MOV      r0,#2
000398  ebfffffe          BL       spi1
;;;232    temp=*(((char*)&ADR)+1);
00039c  e5dd0001          LDRB     r0,[sp,#1]
;;;233    spi1(temp);
0003a0  ebfffffe          BL       spi1
;;;234    temp=*((char*)&ADR);
0003a4  e5dd0000          LDRB     r0,[sp,#0]
;;;235    spi1(temp);
0003a8  ebfffffe          BL       spi1
;;;236    temp=spi1(in);
0003ac  e1a0000c          MOV      r0,r12
0003b0  ebfffffe          BL       spi1
0003b4  e1a03000          MOV      r3,r0
;;;237    CS_OFF
0003b8  e5920008          LDR      r0,[r2,#8]
0003bc  e3800602          ORR      r0,r0,#0x200000
0003c0  e5820008          STR      r0,[r2,#8]
0003c4  e5920004          LDR      r0,[r2,#4]
0003c8  e3800602          ORR      r0,r0,#0x200000
0003cc  e5820004          STR      r0,[r2,#4]
;;;238    CS_OFF
0003d0  e5920008          LDR      r0,[r2,#8]
0003d4  e3800602          ORR      r0,r0,#0x200000
0003d8  e5820008          STR      r0,[r2,#8]
0003dc  e5920004          LDR      r0,[r2,#4]
0003e0  e3800602          ORR      r0,r0,#0x200000
0003e4  e5820004          STR      r0,[r2,#4]
;;;239    spi1_unconfig(); 
0003e8  ebfffffe          BL       spi1_unconfig
;;;240    return temp;
0003ec  e1a00003          MOV      r0,r3
0003f0  e8bd400c          POP      {r2,r3,lr}
;;;241    }
0003f4  e12fff1e          BX       lr
;;;242    
                          ENDP

                  lc640_write_int PROC
;;;244    //Запись слова in по адресу ADR
;;;245    char lc640_write_int(short ADR,short in)
0003f8  e92d4003          PUSH     {r0,r1,lr}
                  |L1.1020|
;;;246    {
;;;247    char temp; 
;;;248    while(lc640_rdsr()&0x01)
0003fc  ebfffffe          BL       lc640_rdsr
000400  e3100001          TST      r0,#1
000404  1afffffc          BNE      |L1.1020|
;;;249    	{
;;;250    	}
;;;251    lc640_wren();
000408  ebfffffe          BL       lc640_wren
;;;252    spi1_config();	
00040c  ebfffffe          BL       spi1_config
;;;253    CS_ON
000410  e59f21ec          LDR      r2,|L1.1540|
000414  e5920008          LDR      r0,[r2,#8]
000418  e3800602          ORR      r0,r0,#0x200000
00041c  e5820008          STR      r0,[r2,#8]
000420  e592000c          LDR      r0,[r2,#0xc]
000424  e3800602          ORR      r0,r0,#0x200000
000428  e582000c          STR      r0,[r2,#0xc]
;;;254    spi1(0x02);
00042c  e3a00002          MOV      r0,#2
000430  ebfffffe          BL       spi1
;;;255    temp=*(((char*)&ADR)+1);
000434  e5dd0001          LDRB     r0,[sp,#1]
;;;256    spi1(temp);
000438  ebfffffe          BL       spi1
;;;257    temp=*((char*)&ADR);
00043c  e5dd0000          LDRB     r0,[sp,#0]
;;;258    spi1(temp);
000440  ebfffffe          BL       spi1
;;;259    temp=*((char*)&in);
000444  e5dd0004          LDRB     r0,[sp,#4]
;;;260    spi1(temp);
000448  ebfffffe          BL       spi1
;;;261    temp=*(((char*)&in)+1);
00044c  e5dd3005          LDRB     r3,[sp,#5]
;;;262    spi1(temp);
000450  e1a00003          MOV      r0,r3
000454  ebfffffe          BL       spi1
;;;263    CS_OFF
000458  e5920008          LDR      r0,[r2,#8]
00045c  e3800602          ORR      r0,r0,#0x200000
000460  e5820008          STR      r0,[r2,#8]
000464  e5920004          LDR      r0,[r2,#4]
000468  e3800602          ORR      r0,r0,#0x200000
00046c  e5820004          STR      r0,[r2,#4]
;;;264    CS_OFF
000470  e5920008          LDR      r0,[r2,#8]
000474  e3800602          ORR      r0,r0,#0x200000
000478  e5820008          STR      r0,[r2,#8]
00047c  e5920004          LDR      r0,[r2,#4]
000480  e3800602          ORR      r0,r0,#0x200000
000484  e5820004          STR      r0,[r2,#4]
;;;265    spi1_unconfig();
000488  ebfffffe          BL       spi1_unconfig
;;;266    return temp;
00048c  e1a00003          MOV      r0,r3
000490  e8bd400c          POP      {r2,r3,lr}
;;;267    }  
000494  e12fff1e          BX       lr
;;;268    
                          ENDP

                  lc640_write_long PROC
;;;270    //Запись 4 байт in по адресу ADR
;;;271    char lc640_write_long(int ADR,long in)
000498  e92d4003          PUSH     {r0,r1,lr}
                  |L1.1180|
;;;272    {
;;;273    char temp; 
;;;274    
;;;275    while(lc640_rdsr()&0x01)
00049c  ebfffffe          BL       lc640_rdsr
0004a0  e3100001          TST      r0,#1
0004a4  1afffffc          BNE      |L1.1180|
;;;276    	{
;;;277    	}
;;;278    lc640_wren();	
0004a8  ebfffffe          BL       lc640_wren
;;;279    spi1_config();
0004ac  ebfffffe          BL       spi1_config
;;;280    CS_ON
0004b0  e59f214c          LDR      r2,|L1.1540|
0004b4  e5920008          LDR      r0,[r2,#8]
0004b8  e3800602          ORR      r0,r0,#0x200000
0004bc  e5820008          STR      r0,[r2,#8]
0004c0  e592000c          LDR      r0,[r2,#0xc]
0004c4  e3800602          ORR      r0,r0,#0x200000
0004c8  e582000c          STR      r0,[r2,#0xc]
;;;281    spi1(0x02);
0004cc  e3a00002          MOV      r0,#2
0004d0  ebfffffe          BL       spi1
;;;282    temp=*(((char*)&ADR)+1);
0004d4  e5dd0001          LDRB     r0,[sp,#1]
;;;283    spi1(temp);
0004d8  ebfffffe          BL       spi1
;;;284    temp=*((char*)&ADR);
0004dc  e5dd0000          LDRB     r0,[sp,#0]
;;;285    spi1(temp);
0004e0  ebfffffe          BL       spi1
;;;286    temp=*((char*)&in);
0004e4  e5dd0004          LDRB     r0,[sp,#4]
;;;287    spi1(temp);
0004e8  ebfffffe          BL       spi1
;;;288    temp=*(((char*)&in)+1);
0004ec  e5dd0005          LDRB     r0,[sp,#5]
;;;289    spi1(temp);
0004f0  ebfffffe          BL       spi1
;;;290    temp=*(((char*)&in)+2);
0004f4  e5dd0006          LDRB     r0,[sp,#6]
;;;291    spi1(temp);
0004f8  ebfffffe          BL       spi1
;;;292    temp=*(((char*)&in)+3);
0004fc  e5dd3007          LDRB     r3,[sp,#7]
;;;293    spi1(temp);           
000500  e1a00003          MOV      r0,r3
000504  ebfffffe          BL       spi1
;;;294    CS_OFF
000508  e5920008          LDR      r0,[r2,#8]
00050c  e3800602          ORR      r0,r0,#0x200000
000510  e5820008          STR      r0,[r2,#8]
000514  e5920004          LDR      r0,[r2,#4]
000518  e3800602          ORR      r0,r0,#0x200000
00051c  e5820004          STR      r0,[r2,#4]
;;;295    CS_OFF  
000520  e5920008          LDR      r0,[r2,#8]
000524  e3800602          ORR      r0,r0,#0x200000
000528  e5820008          STR      r0,[r2,#8]
00052c  e5920004          LDR      r0,[r2,#4]
000530  e3800602          ORR      r0,r0,#0x200000
000534  e5820004          STR      r0,[r2,#4]
;;;296    spi1_unconfig();
000538  ebfffffe          BL       spi1_unconfig
;;;297    return temp;
00053c  e1a00003          MOV      r0,r3
000540  e8bd400c          POP      {r2,r3,lr}
;;;298    }
000544  e12fff1e          BX       lr
;;;299    
                          ENDP

                  lc640_write_long_ptr PROC
;;;302    //Запись 4 байт in по адресу ADR
;;;303    char lc640_write_long_ptr(int ADR,char* in)
000548  e92d4003          PUSH     {r0,r1,lr}
;;;304    {
00054c  e1a0c001          MOV      r12,r1
                  |L1.1360|
;;;305    char temp; 
;;;306    
;;;307    while(lc640_rdsr()&0x01)
000550  ebfffffe          BL       lc640_rdsr
000554  e3100001          TST      r0,#1
000558  1afffffc          BNE      |L1.1360|
;;;308    	{
;;;309    	}
;;;310    lc640_wren();	
00055c  ebfffffe          BL       lc640_wren
;;;311    spi1_config();
000560  ebfffffe          BL       spi1_config
;;;312    CS_ON
000564  e59f2098          LDR      r2,|L1.1540|
000568  e5920008          LDR      r0,[r2,#8]
00056c  e3800602          ORR      r0,r0,#0x200000
000570  e5820008          STR      r0,[r2,#8]
000574  e592000c          LDR      r0,[r2,#0xc]
000578  e3800602          ORR      r0,r0,#0x200000
00057c  e582000c          STR      r0,[r2,#0xc]
;;;313    spi1(0x02);
000580  e3a00002          MOV      r0,#2
000584  ebfffffe          BL       spi1
;;;314    temp=*(((char*)&ADR)+1);
000588  e5dd0001          LDRB     r0,[sp,#1]
;;;315    spi1(temp);
00058c  ebfffffe          BL       spi1
;;;316    temp=*((char*)&ADR);
000590  e5dd0000          LDRB     r0,[sp,#0]
;;;317    spi1(temp);
000594  ebfffffe          BL       spi1
;;;318    temp=in[0];
000598  e5dc0000          LDRB     r0,[r12,#0]
;;;319    spi1(temp);
00059c  ebfffffe          BL       spi1
;;;320    temp=in[1];
0005a0  e5dc0001          LDRB     r0,[r12,#1]
;;;321    spi1(temp);
0005a4  ebfffffe          BL       spi1
;;;322    temp=in[2];
0005a8  e5dc0002          LDRB     r0,[r12,#2]
;;;323    spi1(temp);
0005ac  ebfffffe          BL       spi1
;;;324    temp=in[3];
0005b0  e5dc3003          LDRB     r3,[r12,#3]
;;;325    spi1(temp);
0005b4  e1a00003          MOV      r0,r3
0005b8  ebfffffe          BL       spi1
;;;326    
;;;327    CS_OFF
0005bc  e5920008          LDR      r0,[r2,#8]
0005c0  e3800602          ORR      r0,r0,#0x200000
0005c4  e5820008          STR      r0,[r2,#8]
0005c8  e5920004          LDR      r0,[r2,#4]
0005cc  e3800602          ORR      r0,r0,#0x200000
0005d0  e5820004          STR      r0,[r2,#4]
;;;328    CS_OFF  
0005d4  e5920008          LDR      r0,[r2,#8]
0005d8  e3800602          ORR      r0,r0,#0x200000
0005dc  e5820008          STR      r0,[r2,#8]
0005e0  e5920004          LDR      r0,[r2,#4]
0005e4  e3800602          ORR      r0,r0,#0x200000
0005e8  e5820004          STR      r0,[r2,#4]
;;;329    spi1_unconfig();
0005ec  ebfffffe          BL       spi1_unconfig
;;;330    return temp;
0005f0  e1a00003          MOV      r0,r3
0005f4  e8bd400c          POP      {r2,r3,lr}
;;;331    }			 
0005f8  e12fff1e          BX       lr
                          ENDP

                  |L1.1532|
                          DCD      0xe0030000
                  |L1.1536|
                          DCD      0xe002c000
                  |L1.1540|
                          DCD      0xe0028000

                          AREA ||area_number.2||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.2||, ||.text||
                  lc640_read PROC
;;;9      
;;;10     char spi1(char in)
000000  e92d4001          PUSH     {r0,lr}
                  |L2.4|
;;;11     {
;;;12     S1SPDR=in;
000004  ebfffffe          BL       lc640_rdsr
;;;13     while(!(S1SPSR&(1<<7)));
000008  e3100001          TST      r0,#1
00000c  1afffffc          BNE      |L2.4|
000010  ebfffffe          BL       spi1_config
;;;14     return S1SPDR;
000014  e59f2090          LDR      r2,|L2.172|
000018  e5920008          LDR      r0,[r2,#8]
;;;15     }
00001c  e3800602          ORR      r0,r0,#0x200000
000020  e5820008          STR      r0,[r2,#8]
000024  e592000c          LDR      r0,[r2,#0xc]
000028  e3800602          ORR      r0,r0,#0x200000
00002c  e582000c          STR      r0,[r2,#0xc]
000030  e5920008          LDR      r0,[r2,#8]
000034  e3800602          ORR      r0,r0,#0x200000
000038  e5820008          STR      r0,[r2,#8]
00003c  e592000c          LDR      r0,[r2,#0xc]
000040  e3800602          ORR      r0,r0,#0x200000
000044  e582000c          STR      r0,[r2,#0xc]
000048  e3a00003          MOV      r0,#3
00004c  ebfffffe          BL       spi1
000050  e5dd0001          LDRB     r0,[sp,#1]
000054  ebfffffe          BL       spi1
000058  e5dd0000          LDRB     r0,[sp,#0]
00005c  ebfffffe          BL       spi1
000060  e3a000ff          MOV      r0,#0xff
000064  ebfffffe          BL       spi1
000068  e1a03000          MOV      r3,r0
00006c  e5920008          LDR      r0,[r2,#8]
000070  e3800602          ORR      r0,r0,#0x200000
000074  e5820008          STR      r0,[r2,#8]
000078  e5920004          LDR      r0,[r2,#4]
00007c  e3800602          ORR      r0,r0,#0x200000
000080  e5820004          STR      r0,[r2,#4]
000084  e5920008          LDR      r0,[r2,#8]
000088  e3800602          ORR      r0,r0,#0x200000
00008c  e5820008          STR      r0,[r2,#8]
000090  e5920004          LDR      r0,[r2,#4]
000094  e3800602          ORR      r0,r0,#0x200000
000098  e5820004          STR      r0,[r2,#4]
00009c  ebfffffe          BL       spi1_unconfig
0000a0  e1a00003          MOV      r0,r3
0000a4  e8bd4008          POP      {r3,lr}
0000a8  e12fff1e          BX       lr
;;;16     
                          ENDP

                  |L2.172|
                          DCD      0xe0028000

                          AREA ||area_number.3||, CODE, READONLY, ALIGN=2

                          EXPORTAS ||area_number.3||, ||.text||
                  lc640_read_str PROC
;;;9      
;;;10     char spi1(char in)
000000  e92d4037          PUSH     {r0-r2,r4,r5,lr}
;;;11     {
;;;12     S1SPDR=in;
000004  e1a04001          MOV      r4,r1
;;;13     while(!(S1SPSR&(1<<7)));
000008  e1a05002          MOV      r5,r2
                  |L3.12|
00000c  ebfffffe          BL       lc640_rdsr
000010  e3100001          TST      r0,#1
;;;14     return S1SPDR;
000014  1afffffc          BNE      |L3.12|
000018  ebfffffe          BL       spi1_config
;;;15     }
00001c  e59f3088          LDR      r3,|L3.172|
000020  e5930008          LDR      r0,[r3,#8]
000024  e3800602          ORR      r0,r0,#0x200000
000028  e5830008          STR      r0,[r3,#8]
00002c  e593000c          LDR      r0,[r3,#0xc]
000030  e3800602          ORR      r0,r0,#0x200000
000034  e583000c          STR      r0,[r3,#0xc]
000038  e3a00003          MOV      r0,#3
00003c  ebfffffe          BL       spi1
000040  e5dd0001          LDRB     r0,[sp,#1]
000044  ebfffffe          BL       spi1
000048  e5dd0000          LDRB     r0,[sp,#0]
00004c  ebfffffe          BL       spi1
000050  e3a02000          MOV      r2,#0
000054  ea000004          B        |L3.108|
                  |L3.88|
000058  e3a000ff          MOV      r0,#0xff
00005c  ebfffffe          BL       spi1
000060  e4c40001          STRB     r0,[r4],#1
000064  e2820001          ADD      r0,r2,#1
000068  e20020ff          AND      r2,r0,#0xff
                  |L3.108|
00006c  e1520005          CMP      r2,r5
000070  3afffff8          BCC      |L3.88|
000074  e5930008          LDR      r0,[r3,#8]
000078  e3800602          ORR      r0,r0,#0x200000
00007c  e5830008          STR      r0,[r3,#8]
000080  e5930004          LDR      r0,[r3,#4]
000084  e3800602          ORR      r0,r0,#0x200000
000088  e5830004          STR      r0,[r3,#4]
00008c  e5930008          LDR      r0,[r3,#8]
000090  e3800602          ORR      r0,r0,#0x200000
000094  e5830008          STR      r0,[r3,#8]
000098  e5930004          LDR      r0,[r3,#4]
00009c  e3800602          ORR      r0,r0,#0x200000
0000a0  e5830004          STR      r0,[r3,#4]
0000a4  e8bd403e          POP      {r1-r5,lr}
0000a8  eafffffe          B        spi1_unconfig
;;;16     
                          ENDP

                  |L3.172|
                          DCD      0xe0028000
