; generated by ARM C/C++ Compiler with , RVCT4.0 [Build 524] for uVision
; commandline ArmCC [--debug -c --asm --interleave -obeep.o --depend=beep.d --feedback=UKU206.fed --device=DARMP --apcs=interwork -O3 -IC:\Keil\ARM\INC\Philips -D__MICROLIB --omf_browse=beep.crf beep.c]
                          ARM

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  beep_init PROC
;;;38     //-----------------------------------------------
;;;39     void beep_init(long zvuk,char fl) 
000000  e59f2128          LDR      r2,|L1.304|
;;;40     {
;;;41     if(fl=='O')
000004  e351004f          CMP      r1,#0x4f
;;;42     	{
;;;43     	beep_stat_temp=zvuk;
;;;44     	beep_stat=0x0L;
000008  e3a0c000          MOV      r12,#0
;;;45     	beep_stat_cnt=32;
00000c  e3a03020          MOV      r3,#0x20
000010  05820004          STREQ    r0,[r2,#4]            ;43  ; beep_stat_temp
000014  0a00000b          BEQ      |L1.72|
;;;46     	} 
;;;47     else if(fl=='A')
000018  e3510041          CMP      r1,#0x41
00001c  1a000003          BNE      |L1.48|
;;;48     	{
;;;49     	beep_stat_temp=zvuk;
;;;50     	beep_stat=zvuk;
000020  e5820004          STR      r0,[r2,#4]  ; beep_stat_temp
000024  e5820008          STR      r0,[r2,#8]  ; beep_stat
                  |L1.40|
000028  e5c23001          STRB     r3,[r2,#1]            ;45  ; beep_stat_cnt
;;;51     	beep_stat_cnt=32;
;;;52     	}	 
;;;53     
;;;54     else if(fl=='R')
;;;55     	{
;;;56     	beep_stat=zvuk;
;;;57     	}	
;;;58     		          
;;;59     else if(fl=='S')
;;;60     	{
;;;61     	beep_stat_temp=0x0L;
;;;62     	beep_stat=0x0L;
;;;63     	beep_stat_cnt=32;
;;;64     	}	
;;;65     }
00002c  e12fff1e          BX       lr
                  |L1.48|
000030  e3510052          CMP      r1,#0x52              ;54
000034  05820008          STREQ    r0,[r2,#8]            ;56  ; beep_stat
000038  012fff1e          BXEQ     lr
00003c  e3510053          CMP      r1,#0x53              ;59
000040  112fff1e          BXNE     lr
000044  e582c004          STR      r12,[r2,#4]           ;61  ; beep_stat_temp
                  |L1.72|
000048  e582c008          STR      r12,[r2,#8]           ;62  ; beep_stat
00004c  eafffff5          B        |L1.40|
;;;66     
                          ENDP

                  beep_hndl PROC
;;;67     //-----------------------------------------------
;;;68     void beep_hndl(void) 
000050  e59f10d8          LDR      r1,|L1.304|
;;;69     { 
;;;70     static char bcnt;
;;;71     bcnt++; 
000054  e5d10000          LDRB     r0,[r1,#0]  ; bcnt
000058  e2800001          ADD      r0,r0,#1
00005c  e20000ff          AND      r0,r0,#0xff
;;;72     if(bcnt>9)bcnt=0;
000060  e3500009          CMP      r0,#9
000064  e5c10000          STRB     r0,[r1,#0]            ;71  ; bcnt
000068  83a00000          MOVHI    r0,#0
00006c  85c10000          STRBHI   r0,[r1,#0]  ; bcnt
;;;73     
;;;74     if(avar_ind_stat)beep_init(0x33333333,'R');
000070  e59f00bc          LDR      r0,|L1.308|
000074  e5900000          LDR      r0,[r0,#0]  ; avar_ind_stat
000078  e3500000          CMP      r0,#0
00007c  159f00b4          LDRNE    r0,|L1.312|
000080  13a01052          MOVNE    r1,#0x52
000084  1a000008          BNE      |L1.172|
;;;75     
;;;76     else if((bat[0]._temper_stat&0x03)||(bat[1]._temper_stat&0x03))beep_init(0x00000005,'R');
000088  e59f00ac          LDR      r0,|L1.316|
00008c  e5d01037          LDRB     r1,[r0,#0x37]  ; bat
000090  e3110003          TST      r1,#3
000094  05d00073          LDRBEQ   r0,[r0,#0x73]  ; bat
000098  03100003          TSTEQ    r0,#3
00009c  13a01052          MOVNE    r1,#0x52
0000a0  13a00005          MOVNE    r0,#5
;;;77     
;;;78     else beep_init(0x00000000,'S');
0000a4  03a01053          MOVEQ    r1,#0x53
0000a8  03a00000          MOVEQ    r0,#0
                  |L1.172|
0000ac  eafffffe          B        beep_init
;;;79     
;;;80     /*if(K[MNL]==ON)
;;;81     	{ */
;;;82     //if(((av_beep&0xffff)&&(ind!=iK)&&(ind!=iTst))
;;;83     //	/*||((!T_EXT_ZVUK_EN[0])&&((tout_stat[0]==tMIN)||(tout_stat[0]==tMAX)))*/)beep_init(0x55555555,'R'); 
;;;84     
;;;85     //else if(bUrazr&&(!bUOFF))beep_init(0x00010001,'R');
;;;86     
;;;87     //else if(bIrazr&&(cnt_beep==0))beep_init(0x01010101,'R');
;;;88     
;;;89     /*
;;;90     else if(bTsi||bTsb)
;;;91     	{
;;;92     	if(!bcnt)beep_init(0x00000001,'O');
;;;93          }
;;;94     
;;;95     else if(bIbr) beep_init(0x00000001,'R');
;;;96     */
;;;97     
;;;98     
;;;99     //else beep_init(0x00000000,'S');
;;;100    
;;;101    }
;;;102    
                          ENDP

                  beep_drv PROC
;;;103    //-----------------------------------------------
;;;104    void beep_drv(void)
0000b0  e59f0088          LDR      r0,|L1.320|
;;;105    {
;;;106    SET_REG(IO1DIR,1,27,1);
0000b4  e5902018          LDR      r2,[r0,#0x18]
;;;107    if(((*(char*)(&beep_stat_temp))&0x01)&&(ZV_ON))
0000b8  e59f1084          LDR      r1,|L1.324|
0000bc  e3822302          ORR      r2,r2,#0x8000000      ;106
0000c0  e5802018          STR      r2,[r0,#0x18]         ;106
0000c4  e5d12000          LDRB     r2,[r1,#0]  ; beep_stat_temp
;;;108        	{
;;;109        	SET_REG(IO1SET,1,27,1);
;;;110        	beep_cnt=6;
0000c8  e2411004          SUB      r1,r1,#4
0000cc  e3120001          TST      r2,#1                 ;107
0000d0  159f2070          LDRNE    r2,|L1.328|
0000d4  11d220b0          LDRHNE   r2,[r2,#0]            ;107  ; ZV_ON
0000d8  13520000          CMPNE    r2,#0                 ;107
;;;111        	}
;;;112    else SET_REG(IO1CLR,1,27,1);
0000dc  0590201c          LDREQ    r2,[r0,#0x1c]
0000e0  03822302          ORREQ    r2,r2,#0x8000000
0000e4  0580201c          STREQ    r2,[r0,#0x1c]
0000e8  0a000004          BEQ      |L1.256|
0000ec  e5902014          LDR      r2,[r0,#0x14]         ;109
0000f0  e3a03006          MOV      r3,#6                 ;110
0000f4  e3822302          ORR      r2,r2,#0x8000000      ;109
0000f8  e5802014          STR      r2,[r0,#0x14]         ;109
0000fc  e5c13002          STRB     r3,[r1,#2]            ;110  ; beep_cnt
                  |L1.256|
;;;113    
;;;114    beep_stat_temp>>=1;
000100  e5910004          LDR      r0,[r1,#4]  ; beep_stat_temp
000104  e1a000a0          LSR      r0,r0,#1
000108  e5810004          STR      r0,[r1,#4]  ; beep_stat_temp
;;;115    if(--beep_stat_cnt==0)
00010c  e5d10001          LDRB     r0,[r1,#1]  ; beep_stat_cnt
000110  e2400001          SUB      r0,r0,#1
000114  e21000ff          ANDS     r0,r0,#0xff
000118  e5c10001          STRB     r0,[r1,#1]  ; beep_stat_cnt
;;;116    	{
;;;117    	beep_stat_cnt=32;
00011c  03a00020          MOVEQ    r0,#0x20
000120  05c10001          STRBEQ   r0,[r1,#1]  ; beep_stat_cnt
;;;118    	beep_stat_temp=beep_stat;
000124  05910008          LDREQ    r0,[r1,#8]  ; beep_stat
000128  05810004          STREQ    r0,[r1,#4]  ; beep_stat_temp
;;;119    	}
;;;120    }
00012c  e12fff1e          BX       lr
;;;121    
                          ENDP

                  |L1.304|
                          DCD      ||.data||
                  |L1.308|
                          DCD      avar_ind_stat
                  |L1.312|
                          DCD      0x33333333
                  |L1.316|
                          DCD      bat
                  |L1.320|
                          DCD      0xe0028000
                  |L1.324|
                          DCD      ||.data||+0x4
                  |L1.328|
                          DCD      ZV_ON

                          AREA ||.data||, DATA, ALIGN=2

                  bcnt
000000  00                DCB      0x00
                  beep_stat_cnt
000001  00                DCB      0x00
                  beep_cnt
000002  0000              DCB      0x00,0x00
                  beep_stat_temp
                          DCD      0x00000000
                  beep_stat
                          DCD      0x00000000
